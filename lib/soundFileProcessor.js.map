{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./audioWorklet/soundFileProcessor.js"],"names":["processorNames","RingBuffer","SoundFileProcessor","options","processorOptions","bufferSize","inputRingBuffer","inputRingBufferArraySequence","Float32Array","inputs","input","push","framesAvailable","pull","inputChannel","position","length","port","postMessage","name","AudioWorkletProcessor","registerProcessor","soundFileProcessor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA,IAAMA,cAAc;AAAA;AAAA;AAAA;AAAA,CAApB;AACA,IAAMC,UAAU,GAAG;AAAA;AAAA;AAAA;AAAjB;;;;;AAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAkBjB;;;;;;;AAlBiB;AAAA;;AA2BjB;;;;;AA3BiB;AAiCf;AACA;AAEA;AApCe;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,UAkDf;;;AAlDe;;AAAA;AAAA;AAAA;AAAA;AAyDjB;;;;;;AAzDiB;AAAA;AAAA;AA+Df;AACA;AAEA;AAlEe;AAAA;AAAA;;AAAA,yDAyEf;;AAzEe;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,YAAnB;;IAEMC,kB;;;;;AACJ,8BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB;AAEA,QAAMC,gBAAgB,GAAGD,OAAO,CAACC,gBAAR,IAA4B,EAArD;AACA,UAAKC,UAAL,GAAkBD,gBAAgB,CAACC,UAAjB,IAA+B,GAAjD;AACA,UAAKC,eAAL,GAAuB,IAAIL,UAAJ,CAAe,MAAKI,UAApB,EAAgC,CAAhC,CAAvB;AACA,UAAKE,4BAAL,GAAoC,CAAC,IAAIC,YAAJ,CAAiB,MAAKH,UAAtB,CAAD,CAApC;AANmB;AAOpB;;;;4BAEOI,M,EAAQ;AACd,UAAMC,KAAK,GAAGD,MAAM,CAAC,CAAD,CAApB,CADc,CAEd;;AACA,WAAKH,eAAL,CAAqBK,IAArB,CAA0B,CAACD,KAAK,CAAC,CAAD,CAAN,CAA1B;;AAEA,UAAI,KAAKJ,eAAL,CAAqBM,eAArB,IAAwC,KAAKP,UAAjD,EAA6D;AAC3D,aAAKC,eAAL,CAAqBO,IAArB,CAA0B,KAAKN,4BAA/B;AACA,YAAMO,YAAY,GAAG,KAAKP,4BAAL,CAAkC,CAAlC,CAArB;AACA,YAAMQ,QAAQ,GAAGD,YAAY,CAACA,YAAY,CAACE,MAAb,GAAsB,CAAvB,CAAZ,IAAyC,CAA1D;AAEA,aAAKC,IAAL,CAAUC,WAAV,CAAsB;AAAEC,cAAI,EAAE,UAAR;AAAoBJ,kBAAQ,EAAEA;AAA9B,SAAtB;AACD;;AAED,aAAO,IAAP;AACD;;;;mBAxB8BK,qB;;AA2BjCC,iBAAiB,CAACrB,cAAc,CAACsB,kBAAhB,EAAoCpB,kBAApC,CAAjB,C","file":"soundFileProcessor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 40);\n","// import dependencies via preval.require so that they're available as values at compile time\nconst processorNames = preval.require('./processorNames');\nconst RingBuffer = preval.require('./ringBuffer').default;\n\nclass SoundFileProcessor extends AudioWorkletProcessor {\n  constructor(options) {\n    super();\n\n    const processorOptions = options.processorOptions || {};\n    this.bufferSize = processorOptions.bufferSize || 256;\n    this.inputRingBuffer = new RingBuffer(this.bufferSize, 1);\n    this.inputRingBufferArraySequence = [new Float32Array(this.bufferSize)];\n  }\n\n  process(inputs) {\n    const input = inputs[0];\n    // we only care about the first input channel, because that contains the position data\n    this.inputRingBuffer.push([input[0]]);\n\n    if (this.inputRingBuffer.framesAvailable >= this.bufferSize) {\n      this.inputRingBuffer.pull(this.inputRingBufferArraySequence);\n      const inputChannel = this.inputRingBufferArraySequence[0];\n      const position = inputChannel[inputChannel.length - 1] || 0;\n\n      this.port.postMessage({ name: 'position', position: position });\n    }\n\n    return true;\n  }\n}\n\nregisterProcessor(processorNames.soundFileProcessor, SoundFileProcessor);\n"],"sourceRoot":""}