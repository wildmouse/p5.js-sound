{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./audioWorklet/recorderProcessor.js"],"names":["processorNames","RingBuffer","RecorderProcessor","options","processorOptions","numOutputChannels","outputChannelCount","numInputChannels","bufferSize","recording","clear","port","onmessage","event","data","name","record","duration","stop","inputs","sampleLimit","recordedSamples","input","inputRingBuffer","push","framesAvailable","pull","inputRingBufferArraySequence","channel","inputChannelCopy","slice","leftBuffers","rightBuffers","Math","round","sampleRate","buffers","getBuffers","leftBuffer","buffer","rightBuffer","postMessage","mergeBuffers","channelBuffer","result","Float32Array","offset","lng","length","i","set","Array","fill","map","AudioWorkletProcessor","registerProcessor","recorderProcessor"],"mappings":"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","file":"recorderProcessor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","// import dependencies via preval.require so that they're available as values at compile time\nconst processorNames = preval.require('./processorNames');\nconst RingBuffer = preval.require('./ringBuffer').default;\n\nclass RecorderProcessor extends AudioWorkletProcessor {\n  constructor(options) {\n    super();\n\n    const processorOptions = options.processorOptions || {};\n    this.numOutputChannels = options.outputChannelCount || 2;\n    this.numInputChannels = processorOptions.numInputChannels || 2;\n    this.bufferSize = processorOptions.bufferSize || 1024;\n    this.recording = false;\n\n    this.clear();\n\n    this.port.onmessage = (event) => {\n      const data = event.data;\n      if (data.name === 'start') {\n        this.record(data.duration);\n      } else if (data.name === 'stop') {\n        this.stop();\n      }\n    };\n  }\n\n  process(inputs) {\n    if (!this.recording) {\n      return true;\n    } else if (this.sampleLimit && this.recordedSamples >= this.sampleLimit) {\n      this.stop();\n      return true;\n    }\n\n    const input = inputs[0];\n\n    this.inputRingBuffer.push(input);\n\n    if (this.inputRingBuffer.framesAvailable >= this.bufferSize) {\n      this.inputRingBuffer.pull(this.inputRingBufferArraySequence);\n\n      for (let channel = 0; channel < this.numOutputChannels; ++channel) {\n        const inputChannelCopy = this.inputRingBufferArraySequence[\n          channel\n        ].slice();\n        if (channel === 0) {\n          this.leftBuffers.push(inputChannelCopy);\n          if (this.numInputChannels === 1) {\n            this.rightBuffers.push(inputChannelCopy);\n          }\n        } else if (channel === 1 && this.numInputChannels > 1) {\n          this.rightBuffers.push(inputChannelCopy);\n        }\n      }\n\n      this.recordedSamples += this.bufferSize;\n    }\n    return true;\n  }\n\n  record(duration) {\n    if (duration) {\n      this.sampleLimit = Math.round(duration * sampleRate);\n    }\n    this.recording = true;\n  }\n\n  stop() {\n    this.recording = false;\n    const buffers = this.getBuffers();\n    const leftBuffer = buffers[0].buffer;\n    const rightBuffer = buffers[1].buffer;\n    this.port.postMessage(\n      { name: 'buffers', leftBuffer: leftBuffer, rightBuffer: rightBuffer },\n      [leftBuffer, rightBuffer]\n    );\n    this.clear();\n  }\n\n  getBuffers() {\n    const buffers = [];\n    buffers.push(this.mergeBuffers(this.leftBuffers));\n    buffers.push(this.mergeBuffers(this.rightBuffers));\n    return buffers;\n  }\n\n  mergeBuffers(channelBuffer) {\n    let result = new Float32Array(this.recordedSamples);\n    let offset = 0;\n    let lng = channelBuffer.length;\n    for (var i = 0; i < lng; i++) {\n      let buffer = channelBuffer[i];\n      result.set(buffer, offset);\n      offset += buffer.length;\n    }\n    return result;\n  }\n\n  clear() {\n    this.leftBuffers = [];\n    this.rightBuffers = [];\n    this.inputRingBuffer = new RingBuffer(\n      this.bufferSize,\n      this.numInputChannels\n    );\n    this.inputRingBufferArraySequence = new Array(this.numInputChannels)\n      .fill(null)\n      .map(() => new Float32Array(this.bufferSize));\n    this.recordedSamples = 0;\n    this.sampleLimit = null;\n  }\n}\n\nregisterProcessor(processorNames.recorderProcessor, RecorderProcessor);\n"],"sourceRoot":""}