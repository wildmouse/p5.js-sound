{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./audioWorklet/amplitudeProcessor.js"],"names":["processorNames","RingBuffer","AmplitudeProcessor","options","processorOptions","numOutputChannels","outputChannelCount","numInputChannels","normalize","smoothing","bufferSize","inputRingBuffer","outputRingBuffer","inputRingBufferArraySequence","Array","fill","map","Float32Array","stereoVol","stereoVolNorm","volMax","port","onmessage","event","data","name","Math","max","min","inputs","outputs","input","output","push","framesAvailable","pull","channel","inputBuffer","bufLength","length","sum","i","x","rms","sqrt","volSum","index","volume","volNorm","postMessage","AudioWorkletProcessor","registerProcessor","amplitudeProcessor"],"mappings":"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","file":"amplitudeProcessor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 38);\n","// import dependencies via preval.require so that they're available as values at compile time\nconst processorNames = preval.require('./processorNames');\nconst RingBuffer = preval.require('./ringBuffer').default;\n\nclass AmplitudeProcessor extends AudioWorkletProcessor {\n  constructor(options) {\n    super();\n\n    const processorOptions = options.processorOptions || {};\n    this.numOutputChannels = options.outputChannelCount || 1;\n    this.numInputChannels = processorOptions.numInputChannels || 2;\n    this.normalize = processorOptions.normalize || false;\n    this.smoothing = processorOptions.smoothing || 0;\n\n    this.bufferSize = processorOptions.bufferSize || 2048;\n    this.inputRingBuffer = new RingBuffer(\n      this.bufferSize,\n      this.numInputChannels\n    );\n    this.outputRingBuffer = new RingBuffer(\n      this.bufferSize,\n      this.numOutputChannels\n    );\n    this.inputRingBufferArraySequence = new Array(this.numInputChannels)\n      .fill(null)\n      .map(() => new Float32Array(this.bufferSize));\n\n    this.stereoVol = [0, 0];\n    this.stereoVolNorm = [0, 0];\n\n    this.volMax = 0.001;\n\n    this.port.onmessage = (event) => {\n      const data = event.data;\n      if (data.name === 'toggleNormalize') {\n        this.normalize = data.normalize;\n      } else if (data.name === 'smoothing') {\n        this.smoothing = Math.max(0, Math.min(1, data.smoothing));\n      }\n    };\n  }\n\n  // TO DO make this stereo / dependent on # of audio channels\n  process(inputs, outputs) {\n    const input = inputs[0];\n    const output = outputs[0];\n    const smoothing = this.smoothing;\n\n    this.inputRingBuffer.push(input);\n\n    if (this.inputRingBuffer.framesAvailable >= this.bufferSize) {\n      this.inputRingBuffer.pull(this.inputRingBufferArraySequence);\n\n      for (let channel = 0; channel < this.numInputChannels; ++channel) {\n        const inputBuffer = this.inputRingBufferArraySequence[channel];\n        const bufLength = inputBuffer.length;\n\n        let sum = 0;\n        for (var i = 0; i < bufLength; i++) {\n          const x = inputBuffer[i];\n          if (this.normalize) {\n            sum +=\n              Math.max(Math.min(x / this.volMax, 1), -1) *\n              Math.max(Math.min(x / this.volMax, 1), -1);\n          } else {\n            sum += x * x;\n          }\n        }\n\n        // ... then take the square root of the sum.\n        const rms = Math.sqrt(sum / bufLength);\n\n        this.stereoVol[channel] = Math.max(\n          rms,\n          this.stereoVol[channel] * smoothing\n        );\n        this.volMax = Math.max(this.stereoVol[channel], this.volMax);\n      }\n\n      // calculate stero normalized volume and add volume from all channels together\n      let volSum = 0;\n      for (let index = 0; index < this.stereoVol.length; index++) {\n        this.stereoVolNorm[index] = Math.max(\n          Math.min(this.stereoVol[index] / this.volMax, 1),\n          0\n        );\n        volSum += this.stereoVol[index];\n      }\n\n      // volume is average of channels\n      const volume = volSum / this.stereoVol.length;\n\n      // normalized value\n      const volNorm = Math.max(Math.min(volume / this.volMax, 1), 0);\n\n      this.port.postMessage({\n        name: 'amplitude',\n        volume: volume,\n        volNorm: volNorm,\n        stereoVol: this.stereoVol,\n        stereoVolNorm: this.stereoVolNorm,\n      });\n\n      // pass input through to output\n      this.outputRingBuffer.push(this.inputRingBufferArraySequence);\n    }\n\n    // pull 128 frames out of the ring buffer\n    // if the ring buffer does not have enough frames, the output will be silent\n    this.outputRingBuffer.pull(output);\n\n    return true;\n  }\n}\n\nregisterProcessor(processorNames.amplitudeProcessor, AmplitudeProcessor);\n"],"sourceRoot":""}